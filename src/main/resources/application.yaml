spring:
  datasource:
    url: jdbc:mysql://localhost:3306/licenta?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: root
    password: 

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql : true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
        provider:
          google:
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 300MB
      max-request-size: 300MB

app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
file:
  upload-dir: users

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder : TRACE
